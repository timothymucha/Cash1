# -*- coding: utf-8 -*-
"""Cash1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qSzsaSNf85uZn2NUQXXKD-7IQbAFalw1
"""

import streamlit as st
import pandas as pd
from io import StringIO

st.set_page_config(page_title="Cash Sales to IIF Converter", layout="wide")
st.title("üìÑ Convert Excel Cash Sales to QuickBooks IIF")

uploaded_file = st.file_uploader("üì§ Upload Cash Sales Excel File", type=["xlsx"])

def clean_data(df_raw):
    # Drop fully blank rows
    df_raw.dropna(how="all", inplace=True)

    # Remove repeating page headers/footers
    header_keywords = [
        "Printed On", "Page", "Payment Wise Sales Details Report", "Bill Date"
    ]
    df_raw = df_raw[~df_raw.apply(lambda row: row.astype(str).str.contains("|".join(header_keywords), case=False, na=False).any(), axis=1)]

    # Remove transactions by unwanted payment methods in column B (index 1)
    exclude_methods = ["Cheque", "Credit Card", "Invoice", "Discount", "Mpesa"]
    df_raw = df_raw[~df_raw.iloc[:, 1].astype(str).str.strip().isin(exclude_methods)]

    return df_raw

def generate_iif(df):
    output = StringIO()
    output.write("!TRNS\tTRNSTYPE\tDATE\tACCNT\tNAME\tMEMO\tAMOUNT\tDOCNUM\n")
    output.write("!SPL\tTRNSTYPE\tDATE\tACCNT\tNAME\tMEMO\tAMOUNT\tQNTY\tINVITEM\n")
    output.write("!ENDTRNS\n")

    for _, row in df.iterrows():
        trns_date = row['Date'].strftime("%m/%d/%Y")
        amount = float(str(row['Amount']).replace(",", ""))
        docnum = str(row['Bill No.'])
        till = str(row['Till No'])
        memo = f"Till {till} | Invoice {docnum}"

        # Write transaction lines
        output.write(f"TRNS\tPAYMENT\t{trns_date}\tCash in Drawer\tWalk In\t{memo}\t{amount}\t{docnum}\n")
        output.write(f"SPL\tPAYMENT\t{trns_date}\tAccounts Receivable\tWalk In\t{memo}\t{-amount}\t\t\n")
        output.write("ENDTRNS\n")
    return output.getvalue()

if uploaded_file:
    try:
        # Read raw data from row 17 onwards
        df_raw = pd.read_excel(uploaded_file, header=None, skiprows=16)

        # Apply cleaning rules
        df_raw = clean_data(df_raw)

        # Rename relevant columns
        df_raw.rename(columns={
            4: "Till No",
            9: "Date",
            15: "Bill No.",
            25: "Amount"
        }, inplace=True)

        # Keep only the relevant columns
        df = df_raw[["Till No", "Date", "Bill No.", "Amount"]].copy()

        # Drop rows with missing essential data
        df.dropna(subset=["Date", "Amount"], inplace=True)

        # Convert Date to proper datetime
        df["Date"] = pd.to_datetime(df["Date"], format="%d-%b-%Y %I.%M.%S %p", errors="coerce")

        st.subheader("üßæ Preview: First 10 Cleaned Cash Sales")
        st.dataframe(df.head(10))

        # Generate IIF text
        iif_text = generate_iif(df)

        st.subheader("üì• Download .IIF File")
        st.download_button("Download IIF", iif_text, file_name="cash_sales.iif", mime="text/plain")

    except Exception as e:
        st.error(f"‚ùå Failed to process file: {e}")